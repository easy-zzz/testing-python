"""Tests for AoC {{day}}, {{year}}{% if puzzle_name %}: {{puzzle_name}}{% endif %}"""

# Импорт стандартных библиотек
import pathlib

# Сторонний импорт
import aoc{{year}}{{'%02d'|format(day)}}
import pytest

PUZZLE_DIR = pathlib.Path(__file__).parent


@pytest.fixture
def example1():
    puzzle_input = (PUZZLE_DIR / "example1.txt").read_text().strip()
    return aoc{{year}}{{'%02d'|format(day)}}.parse(puzzle_input)


@pytest.fixture
def example2():
    puzzle_input = (PUZZLE_DIR / "example2.txt").read_text().strip()
    return aoc{{year}}{{'%02d'|format(day)}}.parse(puzzle_input)


@pytest.mark.skip(reason="Not implemented")
def test_parse_example1(example1):
    """Test, что ввод проанализируется должным образом."""
    assert example1 == ...


@pytest.mark.skip(reason="Not implemented")
def test_part1_example1(example1):
    """Тестовая часть 1 на примере ввода."""
    assert aoc{{year}}{{'%02d'|format(day)}}.part1(example1) == ...


@pytest.mark.skip(reason="Not implemented")
def test_part2_example1(example1):
    """Тестовая часть 2 на примере ввода."""
    assert aoc{{year}}{{'%02d'|format(day)}}.part2(example1) == ...


@pytest.mark.skip(reason="Not implemented")
def test_part2_example2(example2):
    """Тестовая часть 2 на примере ввода."""
    assert aoc{{year}}{{'%02d'|format(day)}}.part2(example2) == ...